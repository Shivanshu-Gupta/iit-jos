You will need to do all of the regular exercises described in the lab and the (optional, any one) challenge problem. Write up brief answers to the questions posed in the lab and a one or two paragraph description of what you did to solve the (optional, any one) challenge problems in a file called answers-lab3.txt in the top level of your lab directory. Also, in answers-lab3.txt you must submit a short description (atleast 3 points) of learnings you had while implementing this lab.


Q1    What is the purpose of having an individual handler function for each exception/interrupt? (i.e., if all exceptions/interrupts were delivered to the same handler, what feature that exists in the current implementation could not be provided?)

ANS:
A singlle handler would not be able to handler the variety of interrupts that may occur.
Different interrupts are meant to be raised by different entities. For eg, while a user program may be allowed to raise a breakpoint interrupt, only the hardware should be allowed to raise a page fault. Having a single handler would either 






Q2    Did you have to do anything to make the user/softint program behave correctly? The grade script expects it to produce a general protection fault (trap 13), but softint's code says int $14. Why should this produce interrupt vector 13? What happens if the kernel actually allows softint's int $14 instruction to invoke the kernel's page fault handler (which is interrupt vector 14)?

ANS:
Interrupt vector 13 i.e. General protection fault was raised as the vector's interrupt gate's DPL in the IDT is set to 0 and so the user is not permitted to raise a page fault. If the softint's int $14 was allowed to invoke the kernel's page fault handler, then 



Q3    The break point test case will either generate a break point exception or a general protection fault depending on how you initialized the break point entry in the IDT (i.e., your call to SETGATE from trap_init). Why? How do you need to set it up in order to get the breakpoint exception to work as specified above and what incorrect setup would cause it to trigger a general protection fault?

ANS:
If the DPL of the entry of the vector in the IDT is set to 0 instead of 3, protection fault instead of breakpoint exception.


Q4    What do you think is the point of these mechanisms, particularly in light of what the user/softint test program does?

ANS:
It prevents the user programs to raise some interrupts.

